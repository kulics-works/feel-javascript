// Generated from src/compiler/LiteLexer.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class LiteLexer extends Lexer {
	public static readonly LinqFrom = 1;
	public static readonly LinqBy = 2;
	public static readonly LinqSelect = 3;
	public static readonly LinqWhere = 4;
	public static readonly LinqGroup = 5;
	public static readonly LinqInto = 6;
	public static readonly LinqOrderby = 7;
	public static readonly LinqJoin = 8;
	public static readonly LinqLet = 9;
	public static readonly LinqIn = 10;
	public static readonly LinqOn = 11;
	public static readonly LinqEquals = 12;
	public static readonly LinqAscending = 13;
	public static readonly LinqDescending = 14;
	public static readonly Pow = 15;
	public static readonly Root = 16;
	public static readonly Log = 17;
	public static readonly Add_Equal = 18;
	public static readonly Sub_Equal = 19;
	public static readonly Mul_Equal = 20;
	public static readonly Div_Equal = 21;
	public static readonly Mod_Equal = 22;
	public static readonly Colon_Equal = 23;
	public static readonly Equal_Equal = 24;
	public static readonly Less_Equal = 25;
	public static readonly Greater_Equal = 26;
	public static readonly Not_Equal = 27;
	public static readonly Dot_Dot_Dot = 28;
	public static readonly Dot_Dot = 29;
	public static readonly Dot = 30;
	public static readonly Comma = 31;
	public static readonly Equal_Arrow = 32;
	public static readonly Right_Arrow = 33;
	public static readonly Left_Arrow = 34;
	public static readonly Right_Flow = 35;
	public static readonly Left_Flow = 36;
	public static readonly Equal = 37;
	public static readonly Less = 38;
	public static readonly Greater = 39;
	public static readonly Semi = 40;
	public static readonly Left_Paren = 41;
	public static readonly Right_Paren = 42;
	public static readonly Left_Brace = 43;
	public static readonly Right_Brace = 44;
	public static readonly Left_Brack = 45;
	public static readonly Right_Brack = 46;
	public static readonly Colon_Colon = 47;
	public static readonly Colon = 48;
	public static readonly Question = 49;
	public static readonly At = 50;
	public static readonly Bang = 51;
	public static readonly Wave = 52;
	public static readonly Add = 53;
	public static readonly Sub = 54;
	public static readonly Mul = 55;
	public static readonly Div = 56;
	public static readonly Mod = 57;
	public static readonly Slash = 58;
	public static readonly And = 59;
	public static readonly Or = 60;
	public static readonly Xor = 61;
	public static readonly TypeI8 = 62;
	public static readonly TypeU8 = 63;
	public static readonly TypeI16 = 64;
	public static readonly TypeU16 = 65;
	public static readonly TypeI32 = 66;
	public static readonly TypeU32 = 67;
	public static readonly TypeI64 = 68;
	public static readonly TypeU64 = 69;
	public static readonly TypeF32 = 70;
	public static readonly TypeF64 = 71;
	public static readonly TypeChr = 72;
	public static readonly TypeStr = 73;
	public static readonly TypeBool = 74;
	public static readonly TypeInt = 75;
	public static readonly TypeNum = 76;
	public static readonly TypeByte = 77;
	public static readonly TypeAny = 78;
	public static readonly NilLiteral = 79;
	public static readonly TrueLiteral = 80;
	public static readonly FalseLiteral = 81;
	public static readonly UndefinedLiteral = 82;
	public static readonly NumberLiteral = 83;
	public static readonly TextLiteral = 84;
	public static readonly CharLiteral = 85;
	public static readonly IDPrivate = 86;
	public static readonly IDPublic = 87;
	public static readonly Discard = 88;
	public static readonly Big_Big_Comment = 89;
	public static readonly Big_Comment = 90;
	public static readonly Comment = 91;
	public static readonly New_Line = 92;
	public static readonly WS = 93;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"LinqFrom", "LinqBy", "LinqSelect", "LinqWhere", "LinqGroup", "LinqInto", 
		"LinqOrderby", "LinqJoin", "LinqLet", "LinqIn", "LinqOn", "LinqEquals", 
		"LinqAscending", "LinqDescending", "Pow", "Root", "Log", "Add_Equal", 
		"Sub_Equal", "Mul_Equal", "Div_Equal", "Mod_Equal", "Colon_Equal", "Equal_Equal", 
		"Less_Equal", "Greater_Equal", "Not_Equal", "Dot_Dot_Dot", "Dot_Dot", 
		"Dot", "Comma", "Equal_Arrow", "Right_Arrow", "Left_Arrow", "Right_Flow", 
		"Left_Flow", "Equal", "Less", "Greater", "Semi", "Left_Paren", "Right_Paren", 
		"Left_Brace", "Right_Brace", "Left_Brack", "Right_Brack", "Colon_Colon", 
		"Colon", "Question", "At", "Bang", "Wave", "Add", "Sub", "Mul", "Div", 
		"Mod", "Slash", "And", "Or", "Xor", "TypeI8", "TypeU8", "TypeI16", "TypeU16", 
		"TypeI32", "TypeU32", "TypeI64", "TypeU64", "TypeF32", "TypeF64", "TypeChr", 
		"TypeStr", "TypeBool", "TypeInt", "TypeNum", "TypeByte", "TypeAny", "NilLiteral", 
		"TrueLiteral", "FalseLiteral", "UndefinedLiteral", "NumberLiteral", "DIGIT", 
		"TextLiteral", "CharLiteral", "IDPrivate", "IDPublic", "Discard", "Big_Big_Comment", 
		"Big_Comment", "Comment", "New_Line", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'from'", "'by'", "'select'", "'where'", "'group'", "'into'", 
		"'orderby'", "'join'", "'let'", "'in'", "'on'", "'equals'", "'ascending'", 
		"'descending'", "'**'", "'//'", "'%%'", "'+='", "'-='", "'*='", "'/='", 
		"'%='", "':='", "'=='", "'<='", "'>='", "'><'", "'...'", "'..'", "'.'", 
		"','", "'=>'", "'->'", "'<-'", "'~>'", "'<~'", "'='", "'<'", "'>'", "';'", 
		"'('", "')'", "'{'", "'}'", "'['", "']'", "'::'", "':'", "'?'", "'@'", 
		"'!'", "'~'", "'+'", "'-'", "'*'", "'/'", "'%'", "'\\'", "'&'", "'|'", 
		"'^'", "'I8'", "'U8'", "'I16'", "'U16'", "'I32'", "'U32'", "'I64'", "'U64'", 
		"'F32'", "'F64'", "'Chr'", "'Str'", "'Bool'", "'Int'", "'Num'", "'Byte'", 
		"'Any'", "'Nil'", "'True'", "'False'", "'Undefined'", undefined, undefined, 
		undefined, undefined, undefined, "'_'", undefined, undefined, undefined, 
		"'\n'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "LinqFrom", "LinqBy", "LinqSelect", "LinqWhere", "LinqGroup", 
		"LinqInto", "LinqOrderby", "LinqJoin", "LinqLet", "LinqIn", "LinqOn", 
		"LinqEquals", "LinqAscending", "LinqDescending", "Pow", "Root", "Log", 
		"Add_Equal", "Sub_Equal", "Mul_Equal", "Div_Equal", "Mod_Equal", "Colon_Equal", 
		"Equal_Equal", "Less_Equal", "Greater_Equal", "Not_Equal", "Dot_Dot_Dot", 
		"Dot_Dot", "Dot", "Comma", "Equal_Arrow", "Right_Arrow", "Left_Arrow", 
		"Right_Flow", "Left_Flow", "Equal", "Less", "Greater", "Semi", "Left_Paren", 
		"Right_Paren", "Left_Brace", "Right_Brace", "Left_Brack", "Right_Brack", 
		"Colon_Colon", "Colon", "Question", "At", "Bang", "Wave", "Add", "Sub", 
		"Mul", "Div", "Mod", "Slash", "And", "Or", "Xor", "TypeI8", "TypeU8", 
		"TypeI16", "TypeU16", "TypeI32", "TypeU32", "TypeI64", "TypeU64", "TypeF32", 
		"TypeF64", "TypeChr", "TypeStr", "TypeBool", "TypeInt", "TypeNum", "TypeByte", 
		"TypeAny", "NilLiteral", "TrueLiteral", "FalseLiteral", "UndefinedLiteral", 
		"NumberLiteral", "TextLiteral", "CharLiteral", "IDPrivate", "IDPublic", 
		"Discard", "Big_Big_Comment", "Big_Comment", "Comment", "New_Line", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(LiteLexer._LITERAL_NAMES, LiteLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return LiteLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(LiteLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "LiteLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return LiteLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return LiteLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return LiteLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return LiteLexer.modeNames; }

	private static readonly _serializedATNSegments: number = 2;
	private static readonly _serializedATNSegment0: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02_\u0243\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04" +
		"O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x04V\tV\x04W\tW\x04" +
		"X\tX\x04Y\tY\x04Z\tZ\x04[\t[\x04\\\t\\\x04]\t]\x04^\t^\x04_\t_\x03\x02" +
		"\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04" +
		"\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05" +
		"\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07" +
		"\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03" +
		"\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\v\x03" +
		"\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03" +
		"\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03" +
		"\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03" +
		"\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03" +
		"\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03" +
		"\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03!" +
		"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03$\x03$\x03$\x03%\x03%\x03%\x03&\x03" +
		"&\x03\'\x03\'\x03(\x03(\x03)\x03)\x03*\x03*\x03+\x03+\x03,\x03,\x03-\x03" +
		"-\x03.\x03.\x03/\x03/\x030\x030\x030\x031\x031\x032\x032\x033\x033\x03" +
		"4\x034\x035\x035\x036\x036\x037\x037\x038\x038\x039\x039\x03:\x03:\x03" +
		";\x03;\x03<\x03<\x03=\x03=\x03>\x03>\x03?\x03?\x03?\x03@\x03@\x03@\x03" +
		"A\x03A\x03A\x03A\x03B\x03B\x03B\x03B\x03C\x03C\x03C\x03C\x03D\x03D\x03" +
		"D\x03D\x03E\x03E\x03E\x03E\x03F\x03F\x03F\x03F\x03G\x03G\x03G\x03G\x03" +
		"H\x03H\x03H\x03H\x03I\x03I\x03I\x03I\x03J\x03J\x03J\x03J\x03K\x03K\x03" +
		"K\x03K\x03K\x03L\x03L\x03L\x03L\x03M\x03M\x03M\x03M\x03N\x03N\x03N\x03" +
		"N\x03N\x03O\x03O\x03O\x03O\x03P\x03P\x03P\x03P\x03Q\x03Q\x03Q\x03Q\x03" +
		"Q\x03R\x03R\x03R\x03R\x03R\x03R\x03S\x03S\x03S\x03S\x03S\x03S\x03S\x03" +
		"S\x03S\x03S\x03T\x06T\u01E5\nT\rT\x0ET\u01E6\x03U\x03U\x03V\x03V\x03V" +
		"\x03V\x07V\u01EF\nV\fV\x0EV\u01F2\vV\x03V\x03V\x03W\x03W\x03W\x03W\x03" +
		"W\x03W\x07W\u01FC\nW\fW\x0EW\u01FF\vW\x03W\x03W\x03X\x03X\x06X\u0205\n" +
		"X\rX\x0EX\u0206\x03Y\x03Y\x07Y\u020B\nY\fY\x0EY\u020E\vY\x03Z\x03Z\x03" +
		"[\x03[\x03[\x03[\x03[\x07[\u0217\n[\f[\x0E[\u021A\v[\x03[\x03[\x03[\x03" +
		"[\x03[\x03[\x03\\\x03\\\x03\\\x03\\\x07\\\u0226\n\\\f\\\x0E\\\u0229\v" +
		"\\\x03\\\x03\\\x03\\\x03\\\x03\\\x03]\x03]\x07]\u0232\n]\f]\x0E]\u0235" +
		"\v]\x03]\x03]\x03]\x03]\x03^\x03^\x03_\x06_\u023E\n_\r_\x0E_\u023F\x03" +
		"_\x03_\x07\u01F0\u01FD\u0218\u0227\u0233\x02\x02`\x03\x02\x03\x05\x02" +
		"\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02" +
		"\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11" +
		"!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02" +
		"\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02" +
		"!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02," +
		"W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x024g\x025i\x026k\x027m\x02" +
		"8o\x029q\x02:s\x02;u\x02<w\x02=y\x02>{\x02?}\x02@\x7F\x02A\x81\x02B\x83" +
		"\x02C\x85\x02D\x87\x02E\x89\x02F\x8B\x02G\x8D\x02H\x8F\x02I\x91\x02J\x93" +
		"\x02K\x95\x02L\x97\x02M\x99\x02N\x9B\x02O\x9D\x02P\x9F\x02Q\xA1\x02R\xA3" +
		"\x02S\xA5\x02T\xA7\x02U\xA9\x02\x02\xAB\x02V\xAD\x02W\xAF\x02X\xB1\x02" +
		"Y\xB3\x02Z\xB5\x02[\xB7\x02\\\xB9\x02]\xBB\x02^\xBD\x02_\x03\x02\b\x03" +
		"\x022;\t\x02$$^^ddhhppttvv\b\x02^^ddhhppttvv\x06\x022;C\\aac|\x04\x02" +
		"C\\c|\x04\x02\v\v\"\"\x02\u024D\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02" +
		"\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02" +
		"\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02" +
		"\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02" +
		"\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02" +
		"\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02" +
		"\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+" +
		"\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02" +
		"\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02" +
		"\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03" +
		"\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02" +
		"\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02" +
		"M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02" +
		"\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02" +
		"\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03" +
		"\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02" +
		"\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02" +
		"o\x03\x02\x02\x02\x02q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02u\x03\x02" +
		"\x02\x02\x02w\x03\x02\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02\x02" +
		"\x02}\x03\x02\x02\x02\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02\x02" +
		"\x02\x83\x03\x02\x02\x02\x02\x85\x03\x02\x02\x02\x02\x87\x03\x02\x02\x02" +
		"\x02\x89\x03\x02\x02\x02\x02\x8B\x03\x02\x02\x02\x02\x8D\x03\x02\x02\x02" +
		"\x02\x8F\x03\x02\x02\x02\x02\x91\x03\x02\x02\x02\x02\x93\x03\x02\x02\x02" +
		"\x02\x95\x03\x02\x02\x02\x02\x97\x03\x02\x02\x02\x02\x99\x03\x02\x02\x02" +
		"\x02\x9B\x03\x02\x02\x02\x02\x9D\x03\x02\x02\x02\x02\x9F\x03\x02\x02\x02" +
		"\x02\xA1\x03\x02\x02\x02\x02\xA3\x03\x02\x02\x02\x02\xA5\x03\x02\x02\x02" +
		"\x02\xA7\x03\x02\x02\x02\x02\xAB\x03\x02\x02\x02\x02\xAD\x03\x02\x02\x02" +
		"\x02\xAF\x03\x02\x02\x02\x02\xB1\x03\x02\x02\x02\x02\xB3\x03\x02\x02\x02" +
		"\x02\xB5\x03\x02\x02\x02\x02\xB7\x03\x02\x02\x02\x02\xB9\x03\x02\x02\x02" +
		"\x02\xBB\x03\x02\x02\x02\x02\xBD\x03\x02\x02\x02\x03\xBF\x03\x02\x02\x02" +
		"\x05\xC4\x03\x02\x02\x02\x07\xC7\x03\x02\x02\x02\t\xCE\x03\x02\x02\x02" +
		"\v\xD4\x03\x02\x02\x02\r\xDA\x03\x02\x02\x02\x0F\xDF\x03\x02\x02\x02\x11" +
		"\xE7\x03\x02\x02\x02\x13\xEC\x03\x02\x02\x02\x15\xF0\x03\x02\x02\x02\x17" +
		"\xF3\x03\x02\x02\x02\x19\xF6\x03\x02\x02\x02\x1B\xFD\x03\x02\x02\x02\x1D" +
		"\u0107\x03\x02\x02\x02\x1F\u0112\x03\x02\x02\x02!\u0115\x03\x02\x02\x02" +
		"#\u0118\x03\x02\x02\x02%\u011B\x03\x02\x02\x02\'\u011E\x03\x02\x02\x02" +
		")\u0121\x03\x02\x02\x02+\u0124\x03\x02\x02\x02-\u0127\x03\x02\x02\x02" +
		"/\u012A\x03\x02\x02\x021\u012D\x03\x02\x02\x023\u0130\x03\x02\x02\x02" +
		"5\u0133\x03\x02\x02\x027\u0136\x03\x02\x02\x029\u0139\x03\x02\x02\x02" +
		";\u013D\x03\x02\x02\x02=\u0140\x03\x02\x02\x02?\u0142\x03\x02\x02\x02" +
		"A\u0144\x03\x02\x02\x02C\u0147\x03\x02\x02\x02E\u014A\x03\x02\x02\x02" +
		"G\u014D\x03\x02\x02\x02I\u0150\x03\x02\x02\x02K\u0153\x03\x02\x02\x02" +
		"M\u0155\x03\x02\x02\x02O\u0157\x03\x02\x02\x02Q\u0159\x03\x02\x02\x02" +
		"S\u015B\x03\x02\x02\x02U\u015D\x03\x02\x02\x02W\u015F\x03\x02\x02\x02" +
		"Y\u0161\x03\x02\x02\x02[\u0163\x03\x02\x02\x02]\u0165\x03\x02\x02\x02" +
		"_\u0167\x03\x02\x02\x02a\u016A\x03\x02\x02\x02c\u016C\x03\x02\x02\x02" +
		"e\u016E\x03\x02\x02\x02g\u0170\x03\x02\x02\x02i\u0172\x03\x02\x02\x02" +
		"k\u0174\x03\x02\x02\x02m\u0176\x03\x02\x02\x02o\u0178\x03\x02\x02\x02" +
		"q\u017A\x03\x02\x02\x02s\u017C\x03\x02\x02\x02u\u017E\x03\x02\x02\x02" +
		"w\u0180\x03\x02\x02\x02y\u0182\x03\x02\x02\x02{\u0184\x03\x02\x02\x02" +
		"}\u0186\x03\x02\x02\x02\x7F\u0189\x03\x02\x02\x02\x81\u018C\x03\x02\x02" +
		"\x02\x83\u0190\x03\x02\x02\x02\x85\u0194\x03\x02\x02\x02\x87\u0198\x03" +
		"\x02\x02\x02\x89\u019C\x03\x02\x02\x02\x8B\u01A0\x03\x02\x02\x02\x8D\u01A4" +
		"\x03\x02\x02\x02\x8F\u01A8\x03\x02\x02\x02\x91\u01AC\x03\x02\x02\x02\x93" +
		"\u01B0\x03\x02\x02\x02\x95\u01B4\x03\x02\x02\x02\x97\u01B9\x03\x02\x02" +
		"\x02\x99\u01BD\x03\x02\x02\x02\x9B\u01C1\x03\x02\x02\x02\x9D\u01C6\x03" +
		"\x02\x02\x02\x9F\u01CA\x03\x02\x02\x02\xA1\u01CE\x03\x02\x02\x02\xA3\u01D3" +
		"\x03\x02\x02\x02\xA5\u01D9\x03\x02\x02\x02\xA7\u01E4\x03\x02\x02\x02\xA9" +
		"\u01E8\x03\x02\x02\x02\xAB\u01EA\x03\x02\x02\x02\xAD\u01F5\x03\x02\x02" +
		"\x02\xAF\u0202\x03\x02\x02\x02\xB1\u0208\x03\x02\x02\x02\xB3\u020F\x03" +
		"\x02\x02\x02\xB5\u0211\x03\x02\x02\x02\xB7\u0221\x03\x02\x02\x02\xB9\u022F" +
		"\x03\x02\x02\x02\xBB\u023A\x03\x02\x02\x02\xBD\u023D\x03\x02\x02\x02\xBF" +
		"\xC0\x07h\x02\x02\xC0\xC1\x07t\x02\x02\xC1\xC2\x07q\x02\x02\xC2\xC3\x07" +
		"o\x02\x02\xC3\x04\x03\x02\x02\x02\xC4\xC5\x07d\x02\x02\xC5\xC6\x07{\x02" +
		"\x02\xC6\x06\x03\x02\x02\x02\xC7\xC8\x07u\x02\x02\xC8\xC9\x07g\x02\x02" +
		"\xC9\xCA\x07n\x02\x02\xCA\xCB\x07g\x02\x02\xCB\xCC\x07e\x02\x02\xCC\xCD" +
		"\x07v\x02\x02\xCD\b\x03\x02\x02\x02\xCE\xCF\x07y\x02\x02\xCF\xD0\x07j" +
		"\x02\x02\xD0\xD1\x07g\x02\x02\xD1\xD2\x07t\x02\x02\xD2\xD3\x07g\x02\x02" +
		"\xD3\n\x03\x02\x02\x02\xD4\xD5\x07i\x02\x02\xD5\xD6\x07t\x02\x02\xD6\xD7" +
		"\x07q\x02\x02\xD7\xD8\x07w\x02\x02\xD8\xD9\x07r\x02\x02\xD9\f\x03\x02" +
		"\x02\x02\xDA\xDB\x07k\x02\x02\xDB\xDC\x07p\x02\x02\xDC\xDD\x07v\x02\x02" +
		"\xDD\xDE\x07q\x02\x02\xDE\x0E\x03\x02\x02\x02\xDF\xE0\x07q\x02\x02\xE0" +
		"\xE1\x07t\x02\x02\xE1\xE2\x07f\x02\x02\xE2\xE3\x07g\x02\x02\xE3\xE4\x07" +
		"t\x02\x02\xE4\xE5\x07d\x02\x02\xE5\xE6\x07{\x02\x02\xE6\x10\x03\x02\x02" +
		"\x02\xE7\xE8\x07l\x02\x02\xE8\xE9\x07q\x02\x02\xE9\xEA\x07k\x02\x02\xEA" +
		"\xEB\x07p\x02\x02\xEB\x12\x03\x02\x02\x02\xEC\xED\x07n\x02\x02\xED\xEE" +
		"\x07g\x02\x02\xEE\xEF\x07v\x02\x02\xEF\x14\x03\x02\x02\x02\xF0\xF1\x07" +
		"k\x02\x02\xF1\xF2\x07p\x02\x02\xF2\x16\x03\x02\x02\x02\xF3\xF4\x07q\x02" +
		"\x02\xF4\xF5\x07p\x02\x02\xF5\x18\x03\x02\x02\x02\xF6\xF7\x07g\x02\x02" +
		"\xF7\xF8\x07s\x02\x02\xF8\xF9\x07w\x02\x02\xF9\xFA\x07c\x02\x02\xFA\xFB" +
		"\x07n\x02\x02\xFB\xFC\x07u\x02\x02\xFC\x1A\x03\x02\x02\x02\xFD\xFE\x07" +
		"c\x02\x02\xFE\xFF\x07u\x02\x02\xFF\u0100\x07e\x02\x02\u0100\u0101\x07" +
		"g\x02\x02\u0101\u0102\x07p\x02\x02\u0102\u0103\x07f\x02\x02\u0103\u0104" +
		"\x07k\x02\x02\u0104\u0105\x07p\x02\x02\u0105\u0106\x07i\x02\x02\u0106" +
		"\x1C\x03\x02\x02\x02\u0107\u0108\x07f\x02\x02\u0108\u0109\x07g\x02\x02" +
		"\u0109\u010A\x07u\x02\x02\u010A\u010B\x07e\x02\x02\u010B\u010C\x07g\x02" +
		"\x02\u010C\u010D\x07p\x02\x02\u010D\u010E\x07f\x02\x02\u010E\u010F\x07" +
		"k\x02\x02\u010F\u0110\x07p\x02\x02\u0110\u0111\x07i\x02\x02\u0111\x1E" +
		"\x03\x02\x02\x02\u0112\u0113\x07,\x02\x02\u0113\u0114\x07,\x02\x02\u0114" +
		" \x03\x02\x02\x02\u0115\u0116\x071\x02\x02\u0116\u0117\x071\x02\x02\u0117" +
		"\"\x03\x02\x02\x02\u0118\u0119\x07\'\x02\x02\u0119\u011A\x07\'\x02\x02" +
		"\u011A$\x03\x02\x02\x02\u011B\u011C\x07-\x02\x02\u011C\u011D\x07?\x02" +
		"\x02\u011D&\x03\x02\x02\x02\u011E\u011F\x07/\x02\x02\u011F\u0120\x07?" +
		"\x02\x02\u0120(\x03\x02\x02\x02\u0121\u0122\x07,\x02\x02\u0122\u0123\x07" +
		"?\x02\x02\u0123*\x03\x02\x02\x02\u0124\u0125\x071\x02\x02\u0125\u0126" +
		"\x07?\x02\x02\u0126,\x03\x02\x02\x02\u0127\u0128\x07\'\x02\x02\u0128\u0129" +
		"\x07?\x02\x02\u0129.\x03\x02\x02\x02\u012A\u012B\x07<\x02\x02\u012B\u012C" +
		"\x07?\x02\x02\u012C0\x03\x02\x02\x02\u012D\u012E\x07?\x02\x02\u012E\u012F" +
		"\x07?\x02\x02\u012F2\x03\x02\x02\x02\u0130\u0131\x07>\x02\x02\u0131\u0132" +
		"\x07?\x02\x02\u01324\x03\x02\x02\x02\u0133\u0134\x07@\x02\x02\u0134\u0135" +
		"\x07?\x02\x02\u01356\x03\x02\x02\x02\u0136\u0137\x07@\x02\x02\u0137\u0138" +
		"\x07>\x02\x02\u01388\x03\x02\x02\x02\u0139\u013A\x070\x02\x02\u013A\u013B" +
		"\x070\x02\x02\u013B\u013C\x070\x02\x02\u013C:\x03\x02\x02\x02\u013D\u013E" +
		"\x070\x02\x02\u013E\u013F\x070\x02\x02\u013F<\x03\x02\x02\x02\u0140\u0141" +
		"\x070\x02\x02\u0141>\x03\x02\x02\x02\u0142\u0143\x07.\x02\x02\u0143@\x03" +
		"\x02\x02\x02\u0144\u0145\x07?\x02\x02\u0145\u0146\x07@\x02\x02\u0146B" +
		"\x03\x02\x02\x02\u0147\u0148\x07/\x02\x02\u0148\u0149\x07@\x02\x02\u0149" +
		"D\x03\x02\x02\x02\u014A\u014B\x07>\x02\x02\u014B\u014C\x07/\x02\x02\u014C" +
		"F\x03\x02\x02\x02\u014D\u014E\x07\x80\x02\x02\u014E\u014F\x07@\x02\x02" +
		"\u014FH\x03\x02\x02\x02\u0150\u0151\x07>\x02\x02\u0151\u0152\x07\x80\x02" +
		"\x02\u0152J\x03\x02\x02\x02\u0153\u0154\x07?\x02\x02\u0154L\x03\x02\x02" +
		"\x02\u0155\u0156\x07>\x02\x02\u0156N\x03\x02\x02\x02\u0157\u0158\x07@" +
		"\x02\x02\u0158P\x03\x02\x02\x02\u0159\u015A\x07=\x02\x02\u015AR\x03\x02" +
		"\x02\x02\u015B\u015C\x07*\x02\x02\u015CT\x03\x02\x02\x02\u015D\u015E\x07" +
		"+\x02\x02\u015EV\x03\x02\x02\x02\u015F\u0160\x07}\x02\x02\u0160X\x03\x02" +
		"\x02\x02\u0161\u0162\x07\x7F\x02\x02\u0162Z\x03\x02\x02\x02\u0163\u0164" +
		"\x07]\x02\x02\u0164\\\x03\x02\x02\x02\u0165\u0166\x07_\x02\x02\u0166^" +
		"\x03\x02\x02\x02\u0167\u0168\x07<\x02\x02\u0168\u0169\x07<\x02\x02\u0169" +
		"`\x03\x02\x02\x02\u016A\u016B\x07<\x02\x02\u016Bb\x03\x02\x02\x02\u016C" +
		"\u016D\x07A\x02\x02\u016Dd\x03\x02\x02\x02\u016E\u016F\x07B\x02\x02\u016F" +
		"f\x03\x02\x02\x02\u0170\u0171\x07#\x02\x02\u0171h\x03\x02\x02\x02\u0172" +
		"\u0173\x07\x80\x02\x02\u0173j\x03\x02\x02\x02\u0174\u0175\x07-\x02\x02" +
		"\u0175l\x03\x02\x02\x02\u0176\u0177\x07/\x02\x02\u0177n\x03\x02\x02\x02" +
		"\u0178\u0179\x07,\x02\x02\u0179p\x03\x02\x02\x02\u017A\u017B\x071\x02" +
		"\x02\u017Br\x03\x02\x02\x02\u017C\u017D\x07\'\x02\x02\u017Dt\x03\x02\x02" +
		"\x02\u017E\u017F\x07^\x02\x02\u017Fv\x03\x02\x02\x02\u0180\u0181\x07(" +
		"\x02\x02\u0181x\x03\x02\x02\x02\u0182\u0183\x07~\x02\x02\u0183z\x03\x02" +
		"\x02\x02\u0184\u0185\x07`\x02\x02\u0185|\x03\x02\x02\x02\u0186\u0187\x07" +
		"K\x02\x02\u0187\u0188\x07:\x02\x02\u0188~\x03\x02\x02\x02\u0189\u018A" +
		"\x07W\x02\x02\u018A\u018B\x07:\x02\x02\u018B\x80\x03\x02\x02\x02\u018C" +
		"\u018D\x07K\x02\x02\u018D\u018E\x073\x02\x02\u018E\u018F\x078\x02\x02" +
		"\u018F\x82\x03\x02\x02\x02\u0190\u0191\x07W\x02\x02\u0191\u0192\x073\x02" +
		"\x02\u0192\u0193\x078\x02\x02\u0193\x84\x03\x02\x02\x02\u0194\u0195\x07" +
		"K\x02\x02\u0195\u0196\x075\x02\x02\u0196\u0197\x074\x02\x02\u0197\x86" +
		"\x03\x02\x02\x02\u0198\u0199\x07W\x02\x02\u0199\u019A\x075\x02\x02\u019A" +
		"\u019B\x074\x02\x02\u019B\x88\x03\x02\x02\x02\u019C\u019D\x07K\x02\x02" +
		"\u019D\u019E\x078\x02\x02\u019E\u019F\x076\x02\x02\u019F\x8A\x03\x02\x02" +
		"\x02\u01A0\u01A1\x07W\x02\x02\u01A1\u01A2\x078\x02\x02\u01A2\u01A3\x07" +
		"6\x02\x02\u01A3\x8C\x03\x02\x02\x02\u01A4\u01A5\x07H\x02\x02\u01A5\u01A6" +
		"\x075\x02\x02\u01A6\u01A7\x074\x02\x02\u01A7\x8E\x03\x02\x02\x02\u01A8" +
		"\u01A9\x07H\x02\x02\u01A9\u01AA\x078\x02\x02\u01AA\u01AB\x076\x02\x02" +
		"\u01AB\x90\x03\x02\x02\x02\u01AC\u01AD\x07E\x02\x02\u01AD\u01AE\x07j\x02" +
		"\x02\u01AE\u01AF\x07t\x02\x02\u01AF\x92\x03\x02\x02\x02\u01B0\u01B1\x07" +
		"U\x02\x02\u01B1\u01B2\x07v\x02\x02\u01B2\u01B3\x07t\x02\x02\u01B3\x94" +
		"\x03\x02\x02\x02\u01B4\u01B5\x07D\x02\x02\u01B5\u01B6\x07q\x02\x02\u01B6" +
		"\u01B7\x07q\x02\x02\u01B7\u01B8\x07n\x02\x02\u01B8\x96\x03\x02\x02\x02" +
		"\u01B9\u01BA\x07K\x02\x02\u01BA\u01BB\x07p\x02\x02\u01BB\u01BC\x07v\x02" +
		"\x02\u01BC\x98\x03\x02\x02\x02\u01BD\u01BE\x07P\x02\x02\u01BE\u01BF\x07" +
		"w\x02\x02\u01BF\u01C0\x07o\x02\x02\u01C0\x9A\x03\x02\x02\x02\u01C1\u01C2" +
		"\x07D\x02\x02\u01C2\u01C3\x07{\x02\x02\u01C3\u01C4\x07v\x02\x02\u01C4" +
		"\u01C5\x07g\x02\x02\u01C5\x9C\x03\x02\x02\x02\u01C6\u01C7\x07C\x02\x02" +
		"\u01C7\u01C8\x07p\x02\x02\u01C8\u01C9\x07{\x02\x02\u01C9\x9E\x03\x02\x02" +
		"\x02\u01CA\u01CB\x07P\x02\x02\u01CB\u01CC\x07k\x02\x02\u01CC\u01CD\x07" +
		"n\x02\x02\u01CD\xA0\x03\x02\x02\x02\u01CE\u01CF\x07V\x02\x02\u01CF\u01D0" +
		"\x07t\x02\x02\u01D0\u01D1\x07w\x02\x02\u01D1\u01D2\x07g\x02\x02\u01D2" +
		"\xA2\x03\x02\x02\x02\u01D3\u01D4\x07H\x02\x02\u01D4\u01D5\x07c\x02\x02" +
		"\u01D5\u01D6\x07n\x02\x02\u01D6\u01D7\x07u\x02\x02\u01D7\u01D8\x07g\x02" +
		"\x02\u01D8\xA4\x03\x02\x02\x02\u01D9\u01DA\x07W\x02\x02\u01DA\u01DB\x07" +
		"p\x02\x02\u01DB\u01DC\x07f\x02\x02\u01DC\u01DD\x07g\x02\x02\u01DD\u01DE" +
		"\x07h\x02\x02\u01DE\u01DF\x07k\x02\x02\u01DF\u01E0\x07p\x02\x02\u01E0" +
		"\u01E1\x07g\x02\x02\u01E1\u01E2\x07f\x02\x02\u01E2\xA6\x03\x02\x02\x02" +
		"\u01E3\u01E5\x05\xA9U\x02\u01E4\u01E3\x03\x02\x02\x02\u01E5\u01E6\x03" +
		"\x02\x02\x02\u01E6\u01E4\x03\x02\x02\x02\u01E6\u01E7\x03\x02\x02\x02\u01E7" +
		"\xA8\x03\x02\x02\x02\u01E8\u01E9\t\x02\x02\x02\u01E9\xAA\x03\x02\x02\x02" +
		"\u01EA\u01F0\x07$\x02\x02\u01EB\u01EC\x07^\x02\x02\u01EC\u01EF\t\x03\x02" +
		"\x02\u01ED\u01EF\v\x02\x02\x02\u01EE\u01EB\x03\x02\x02\x02\u01EE\u01ED" +
		"\x03\x02\x02\x02\u01EF\u01F2\x03\x02\x02\x02\u01F0\u01F1\x03\x02\x02\x02" +
		"\u01F0\u01EE\x03\x02\x02\x02\u01F1\u01F3\x03\x02\x02\x02\u01F2\u01F0\x03" +
		"\x02\x02\x02\u01F3\u01F4\x07$\x02\x02\u01F4\xAC\x03\x02\x02\x02\u01F5" +
		"\u01FD\x07)\x02\x02\u01F6\u01F7\x07^\x02\x02\u01F7\u01FC\x07)\x02\x02" +
		"\u01F8\u01F9\x07^\x02\x02\u01F9\u01FC\t\x04\x02\x02\u01FA\u01FC\v\x02" +
		"\x02\x02\u01FB\u01F6\x03\x02\x02\x02\u01FB\u01F8\x03\x02\x02\x02\u01FB" +
		"\u01FA\x03\x02\x02\x02\u01FC\u01FF\x03\x02\x02\x02\u01FD\u01FE\x03\x02" +
		"\x02\x02\u01FD\u01FB\x03\x02\x02\x02\u01FE\u0200\x03\x02\x02\x02\u01FF" +
		"\u01FD\x03\x02\x02\x02\u0200\u0201\x07)\x02\x02\u0201\xAE\x03\x02\x02" +
		"\x02\u0202\u0204\x07a\x02\x02\u0203\u0205\t\x05\x02\x02\u0204\u0203\x03" +
		"\x02\x02\x02\u0205\u0206\x03\x02\x02\x02\u0206\u0204\x03\x02\x02\x02\u0206" +
		"\u0207\x03\x02\x02\x02\u0207\xB0\x03\x02\x02\x02\u0208\u020C\t\x06\x02" +
		"\x02\u0209\u020B\t\x05\x02\x02\u020A\u0209\x03\x02\x02\x02\u020B\u020E" +
		"\x03\x02\x02\x02\u020C\u020A\x03\x02\x02\x02\u020C\u020D\x03\x02\x02\x02" +
		"\u020D\xB2\x03\x02\x02\x02\u020E\u020C\x03\x02\x02\x02\u020F\u0210\x07" +
		"a\x02\x02\u0210\xB4\x03\x02\x02\x02\u0211\u0212\x07%\x02\x02\u0212\u0213" +
		"\x07%\x02\x02\u0213\u0214\x07%\x02\x02\u0214\u0218\x03\x02\x02\x02\u0215" +
		"\u0217\v\x02\x02\x02\u0216\u0215\x03\x02\x02\x02\u0217\u021A\x03\x02\x02" +
		"\x02\u0218\u0219\x03\x02\x02\x02\u0218\u0216\x03\x02\x02\x02\u0219\u021B" +
		"\x03\x02\x02\x02\u021A\u0218\x03\x02\x02\x02\u021B\u021C\x07%\x02\x02" +
		"\u021C\u021D\x07%\x02\x02\u021D\u021E\x07%\x02\x02\u021E\u021F\x03\x02" +
		"\x02\x02\u021F\u0220\b[\x02\x02\u0220\xB6\x03\x02\x02\x02\u0221\u0222" +
		"\x07%\x02\x02\u0222\u0223\x07%\x02\x02\u0223\u0227\x03\x02\x02\x02\u0224" +
		"\u0226\v\x02\x02\x02\u0225\u0224\x03\x02\x02\x02\u0226\u0229\x03\x02\x02" +
		"\x02\u0227\u0228\x03\x02\x02\x02\u0227\u0225\x03\x02\x02\x02\u0228\u022A" +
		"\x03\x02\x02\x02\u0229\u0227\x03\x02\x02\x02\u022A\u022B\x07%\x02\x02" +
		"\u022B\u022C\x07%\x02\x02\u022C\u022D\x03\x02\x02\x02\u022D\u022E\b\\" +
		"\x02\x02\u022E\xB8\x03\x02\x02\x02\u022F\u0233\x07%\x02\x02\u0230\u0232" +
		"\v\x02\x02\x02\u0231\u0230\x03\x02\x02\x02\u0232\u0235\x03\x02\x02\x02" +
		"\u0233\u0234\x03\x02\x02\x02\u0233\u0231\x03\x02\x02\x02\u0234\u0236\x03" +
		"\x02\x02\x02\u0235\u0233\x03\x02\x02\x02\u0236\u0237\x07%\x02\x02\u0237" +
		"\u0238\x03\x02\x02\x02\u0238\u0239\b]\x02\x02\u0239\xBA\x03\x02\x02\x02" +
		"\u023A\u023B";
	private static readonly _serializedATNSegment1: string =
		"\x07\f\x02\x02\u023B\xBC\x03\x02\x02\x02\u023C\u023E\t\x07\x02\x02\u023D" +
		"\u023C\x03\x02\x02\x02\u023E\u023F\x03\x02\x02\x02\u023F\u023D\x03\x02" +
		"\x02\x02\u023F\u0240\x03\x02\x02\x02\u0240\u0241\x03\x02\x02\x02\u0241" +
		"\u0242\b_\x02\x02\u0242\xBE\x03\x02\x02\x02\x0E\x02\u01E6\u01EE\u01F0" +
		"\u01FB\u01FD\u0206\u020C\u0218\u0227\u0233\u023F\x03\b\x02\x02";
	public static readonly _serializedATN: string = Utils.join(
		[
			LiteLexer._serializedATNSegment0,
			LiteLexer._serializedATNSegment1,
		],
		"",
	);
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!LiteLexer.__ATN) {
			LiteLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(LiteLexer._serializedATN));
		}

		return LiteLexer.__ATN;
	}

}

